{"version":3,"file":"connect2ic-svelte.esm.js","sources":["../src/components/ConnectButton.svelte","../src/components/ConnectDialog.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { useConnect, useDialog } from \"../stores/index.ts\"\n\n  export const onConnect: () => void = () => {\n  }\n  export const onDisconnect: () => void = () => {\n  }\n  export const dark: boolean = false\n  export const style: string = \"\"\n\n  const { open } = useDialog()\n  const { isConnected, disconnect } = useConnect({\n    onConnect,\n    onDisconnect,\n  })\n</script>\n\n{#if $isConnected}\n  <button style={style} class=\"connect-button\" on:click={() => disconnect()}>\n    Disconnect\n  </button>\n{/if}\n\n{#if !$isConnected}\n  <button style={style} class=\"connect-button\" on:click={() => open()}>\n    Connect\n  </button>\n{/if}\n","<script lang=\"ts\">\n  import { useConnect, useDialog, useProviders } from \"../stores/index.ts\"\n  import { onMount } from \"svelte\"\n\n  export let onClose: () => void = () => {\n    close()\n  }\n  export let dark: boolean = false\n\n  const onClickInside = (e) => {\n    e.stopPropagation()\n  }\n\n  const { isOpen, close, open } = useDialog()\n  const providers = useProviders()\n  const { connect } = useConnect({\n    onConnect: () => {\n      close()\n    },\n  })\n\n  if ($isOpen) {\n    document.body.style.overflow = \"hidden\"\n  }\n  if (!$isOpen) {\n    document.body.style.overflow = \"unset\"\n  }\n\n  onMount(() => {\n    const handleEsc = (event) => {\n      if (event.keyCode === 27) {\n        close()\n      }\n    }\n    window.addEventListener(\"keydown\", handleEsc)\n    return () => {\n      window.removeEventListener(\"keydown\", handleEsc)\n    }\n  })\n\n</script>\n\n{#if $isOpen}\n  <div class={`dialog-styles ${dark ? \"dark\" : \"light\"}`} on:click={onClose}>\n    <div on:click={onClickInside} class=\"dialog-container\">\n      <div>\n        {#each $providers as provider}\n          <button key={provider.meta.id} on:click={() => connect(provider.meta.id)}\n                  class={`button-styles ${provider.meta.id}-styles`}>\n            <img class={\"img-styles\"} src={dark ? provider.meta.icon.dark : provider.meta.icon.light} />\n            <div>\n              <span class=\"button-label\">{provider.meta.name}</span>\n            </div>\n          </button>\n        {/each}\n      </div>\n    </div>\n  </div>\n{/if}"],"names":["ctx","insert","target","button","anchor","create_if_block_1","create_if_block","disconnect","open","length","i","div2","append","div1","div0","is_function","apply","this","arguments","meta","name","icon","dark","light","attr","img","img_src_value","id","div","span","set_data","t1","t1_value","provider","connect"],"mappings":"2+EAkB4E,0BAA3DA,EAAK,0CAApBC,EAEQC,EAAAC,EAAAC,4HAI4D,uBAArDJ,EAAK,0CAApBC,EAEQC,EAAAC,EAAAC,6FATLJ,EAAY,IAAAK,EAAAL,MAMXA,EAAY,IAAAM,EAAAN,wGANbA,EAAY,oEAMXA,EAAY,oSAL6CO,QAMAC,qVCsBhDR,EAAU,wBAAfS,OAAIC,GAAA,oKAHiBV,EAAI,GAAG,OAAS,kBAA7CC,EAcKC,EAAAS,EAAAP,GAbHQ,EAYKD,EAAAE,GAXHD,EAUKC,EAAAC,iEAXQd,EAAa,4BADoCe,EAAAf,OAAAA,EAAO,GAAAgB,MAAAC,KAAAC,uDAG5DlB,EAAU,WAAfS,OAAIC,GAAA,EAAA,iHAAJD,qCAHqBT,EAAI,GAAG,OAAS,uGAQLA,EAAQ,IAACmB,KAAKC,KAAI,6HAFpC,wBAAmBpB,EAAI,GAAGA,EAAS,IAAAmB,KAAKE,KAAKC,KAAOtB,EAAS,IAAAmB,KAAKE,KAAKE,QAAKC,EAAAC,EAAA,MAAAC,2CAF7E1B,EAAQ,IAACmB,KAAKQ,mCACK3B,EAAQ,IAACmB,KAAKQ,qBAD9C1B,EAMQC,EAAAC,EAAAC,GAJNQ,EAA2FT,EAAAsB,UAC3Fb,EAEKT,EAAAyB,GADHhB,EAAqDgB,EAAAC,yEAFxB7B,EAAI,GAAGA,EAAS,IAAAmB,KAAKE,KAAKC,KAAOtB,EAAS,IAAAmB,KAAKE,KAAKE,iCAErDvB,EAAQ,IAACmB,KAAKC,KAAI,KAAAU,EAAAC,EAAAC,eAJrChC,EAAQ,IAACmB,KAAKQ,+CACK3B,EAAQ,IAACmB,KAAKQ,4EANnD3B,EAAO,IAAAM,EAAAN,oEAAPA,EAAO,wsBAK6CiC,GAAAC,EAAQD,EAASd,KAAKQ"}